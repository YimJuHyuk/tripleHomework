<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.triple.home.mapper.ReviewMapper">

	<!-- 해당 장소 리뷰 작성자 존재하는지 확인 -->
	<select id="select" resultType="int" parameterType="string">
		SELECT COUNT(PLACE_ID)
		  FROM REVIEW 
		 WHERE PLACE_ID = #{placeId}
	</select>
	
	<!-- 리뷰작성 -->
	<insert id="insert" parameterType="Event">
		INSERT INTO REVIEW (
					REVIEW_ID, 
					<if test="content!=null and !content.equals('')">
					CONTENT, 
					</if>
					<if test="stringAttachedPhotoIds!=null and !stringAttachedPhotoIds.equals('')">
					ATTACHED_PHOTO_IDS,
					</if>
					USER_ID, 
					PLACE_ID, 
					SCORE
				)
		VALUES (
					#{reviewId},
					<if test="content!=null and !content.equals('')">
					#{content},
					</if>
					<if test="stringAttachedPhotoIds!=null and !stringAttachedPhotoIds.equals('')">
					#{stringAttachedPhotoIds},
					</if>
					#{userId},
					#{placeId},
					#{score}
				)
	</insert>
	
	<!-- 리뷰 업데이트 -->
	<update id="update" parameterType="Event">
		UPDATE REVIEW
		   SET UPDATE_TIME = DATE_FORMAT(now(), '%Y-%m-%d %T')
		   	   , SCORE = #{score}
		   	   , CONTENT = #{content}
		   	   , ATTACHED_PHOTO_IDS = #{stringAttachedPhotoIds}
		 WHERE REVIEW_ID = #{reviewId}
	</update>
	
	<!-- 리뷰 삭제 -->
	<delete id="delete" parameterType="String">
		DELETE FROM REVIEW
		 WHERE REVIEW_ID = #{reviewId}
	</delete>

	<!-- 리뷰 HISTORY 저장 -->
	<insert id="historyInsert" parameterType="ReviewHist">
		INSERT INTO REVIEW_HIST (
					REVIEW_ID, 
					USER_ID, 
					PLACE_ID, 
					ACTION,
					SCORE,
					STATUS
				)
		VALUES (
					#{reviewId},
					#{userId},
					#{placeId},
					#{action},
					#{score},
					#{status}
				)
	</insert>

	<!-- 리뷰포인트 조회 -->
	<select id="pointSelect" resultType="ReviewPoint" parameterType="String">
		SELECT USER_ID    AS userId
			 , SUM(SCORE) AS totalScore
		  FROM REVIEW 
		 WHERE USER_ID = #{userId}
		 GROUP BY USER_ID
	</select>
	

</mapper>